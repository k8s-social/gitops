apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  creationTimestamp: null
  name: grafana-credentials
  namespace: monitoring
spec:
  encryptedData:
    password: AgABxRrp07v8rUR1zw5WdNsn498ywIAoSs10eZwA9PZqhZKkP0v3rc/LrJe3Mk5K86HQEP2HNg+yDxeZ4+WKCdH6ioY3uum6Erapc49XER9LT2CgQS7J9eOESWZ7/T8yaxyXvjDUw5K0UmZrUCgDzWzkv107plPW+PywkPL0jnsXUoLGUWGC8zGX6azGi7tHrM34SEYEU67oNcGV0QSqT3pqNeBnD3MWxjGFQ+8hosbGWAvJXnd8jwQ+W2BBn/x/2b6hGBYSLSeqIJtiQpD4lvmhoL2f+Z+XJSuWRwZykTiYbs1t//0GDkbmDcHlJUwHL+8r80tEmr+i0Uf3C8mENTuZvcEI7ckoWQJ49eGnjfIsbwiTDF/vQAy6bXa8Jje789I2fFlJzo1QIq+rk6w2baP3lDUIJnS9i5G84juoJlx9svcYfmUkMgFgbJE/y/WcbVTM75MUXry1Fmd6xy0YKjYClXgl7RulaXSJY59+QS4q0k5LuLED/ITyCYbmo+EEXfZnSwUkobdMO2RT8yiVJsWlRGLtzfoeH2BssGm8jKHZNZFIR0j79kOS5G+RrUt4oCaC9veYJfZdEbe84oNPThoPXk5tD+Ua60mAeOEqQRgbgg7a4YwZhnRCEwdSrgch1/wux0WHevAixU0u88xbB8fWtYz1MjMkF3JA1K6paob/tOsauTIXS2ptwXz9SPvpbiRvauZGC6l78VWZFTk+2AR1FSXo1Q==
    username: AgAq5wHgqPU9jDMCurZQtYCcnluft8VWzAHcMinDrWYnWVv455jlcC1yBPCm8A4FfGE6zxdItohr5yBeH+n6i1oe1OYXQy8TWkjR76esN4gdNj1+VuyXmdlNwDpIoRyGLRa6/N+YRcjURxDQJy/in3PXyn1rLttRaXAnvwcWC0JDOjVouM01Cynvc0K4Wtsv2ulhsaLWHfOaClb8YoTZ8lgxUHkfcJTQiVdmSUjvye5GuHE2dgIyPAq8Volxi6bjMAwrewz+qPEncDbpNYhgfo+SlH5gMxu56864F3cUyenLCTr2HmjvlySEDRuSjIhcOe89gkjh4IH0Vy/DZv+hR2o8k0HAREM5gLpf3VTXcV8S3+KW8XUbI8EjtLKT1Qi5kNGc81CnQhRShWA/WzxEe/GLETEmgaG3HouKwhQqshvMEzFJ5apgcIzQ8HsPVD3s8a2mz+FqcoDxJ6KEt37J/mRadTEgPSTuzi9EEh8Op5AFfG73Fz7dS00Lcf209Mcb/A79SJlr3o19RdWTNOIGcKY0yNJLjZ4bzm7CQcqieZzjdgJ2tTL4R4FlKjrPqigLlFIAj0bZMNJadBaQ8pMwSVN+IWSFMUccebLgfJAd24yzOUdTuMVvLsTLM95cPtm8T3+v/FRjNp3VBzN6ByQZOa6+x1oicJe1w++DkKlNjnEyYhZZRB/152lkWAP0Vv8yo4u93qQNfg==
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: grafana
      name: grafana-credentials
      namespace: monitoring
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app.kubernetes.io/name: grafana
data:
  grafana.ini: |
    [server]
    enable_gzip = true

    [analytics]
    check_for_updates = false
    reporting_enabled = false

    [auth.anonymous]
    enabled = true
    org_name = "k8s.social"
    org_role = Viewer

    [dataproxy]
    timeout = 300
    max_idle_connections = 400

    [grafana_net]
    url = https://grafana.net

    [log]
    mode = console

    [paths]
    data = /var/lib/grafana/data
    logs = /var/log/grafana
    plugins = /var/lib/grafana/plugins
    provisioning = /etc/grafana/provisioning

    [panels]
    enable_alpha = true

    [plugins]
    enable_alpha = true
    plugin_admin_enabled = true

    [users]
    default_theme = light
  datasources.yaml: |
    apiVersion: 1
    datasources:
    - access: proxy
      jsonData:
        maxLines: 1000
      name: Loki
      type: loki
      url: http://loki.monitoring:3100
    - access: proxy
      name: Prometheus
      type: prometheus
      url: http://prometheus-operated.monitoring.svc:9090
  dashboardproviders.yaml: |
    apiVersion: 1
    providers:
    - allowUiUpdates: true
      disableDeletion: false
      editable: true
      folder: ""
      name: default
      options:
        path: /var/lib/grafana/dashboards/default
      orgId: 1
      type: file
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards-default
  namespace: monitoring
  labels:
    app.kubernetes.io/name: grafana
    dashboard-provider: default
data:
  logs.json:
    |-
      {"annotations":{"list":[{"$$hashKey":"object:75","builtIn":1,"datasource":{"type":"datasource","uid":"grafana"},"enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations & Alerts","target":{"limit":100,"matchAny":false,"tags":[],"type":"dashboard"},"type":"dashboard"}]},"description":"Cluster-wide logs","editable":true,"fiscalYearStartMonth":0,"gnetId":12019,"graphTooltip":0,"id":1,"links":[],"liveNow":false,"panels":[{"aliasColors":{},"bars":true,"dashLength":10,"dashes":false,"datasource":{"type":"loki","uid":"P8E80F9AEF21F6940"},"fieldConfig":{"defaults":{"links":[]},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":3,"w":24,"x":0,"y":0},"hiddenSeries":false,"id":6,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":false,"total":false,"values":false},"lines":false,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pluginVersion":"9.2.4","pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"datasource":{"type":"loki","uid":"P8E80F9AEF21F6940"},"editorMode":"code","expr":"sum(count_over_time({namespace=~\"$namespace\", instance=~\"$pod\"} |~ \"$search\"[$__interval]))","queryType":"range","refId":"A"}],"thresholds":[],"timeRegions":[],"tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"mode":"time","show":true,"values":[]},"yaxes":[{"$$hashKey":"object:168","format":"short","logBase":1,"show":false},{"$$hashKey":"object:169","format":"short","logBase":1,"show":false}],"yaxis":{"align":false}},{"datasource":{"type":"loki","uid":"P8E80F9AEF21F6940"},"gridPos":{"h":25,"w":24,"x":0,"y":3},"id":2,"maxDataPoints":"","options":{"dedupStrategy":"none","enableLogDetails":true,"prettifyLogMessage":false,"showCommonLabels":false,"showLabels":false,"showTime":true,"sortOrder":"Descending","wrapLogMessage":true},"targets":[{"datasource":{"type":"loki","uid":"P8E80F9AEF21F6940"},"editorMode":"code","expr":"{namespace=~\"$namespace\", instance=~\"$pod\"} |~ \"$search\"","queryType":"range","refId":"A"}],"title":"Logs Panel","type":"logs"},{"datasource":{"type":"datasource","uid":"grafana"},"gridPos":{"h":3,"w":24,"x":0,"y":28},"id":4,"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"<div style=\"text-align:center\"> For Grafana Loki blog example </div>\n\n\n","mode":"html"},"pluginVersion":"9.2.4","targets":[{"datasource":{"type":"datasource","uid":"grafana"},"refId":"A"}],"transparent":true,"type":"text"}],"schemaVersion":37,"style":"dark","tags":[],"templating":{"list":[{"allValue":".+","current":{"selected":false,"text":"","value":""},"datasource":{"type":"loki","uid":"P8E80F9AEF21F6940"},"definition":"label_values({namespace=~\".+\"}, namespace)","hide":0,"includeAll":true,"multi":false,"name":"namespace","options":[],"query":{"label":"namespace","refId":"LokiVariableQueryEditor-VariableQuery","stream":"","type":1},"refresh":1,"regex":"","skipUrlSync":false,"sort":0,"tagValuesQuery":"","tagsQuery":"","type":"query","useTags":false},{"allValue":".*","current":{"selected":false,"text":["undefined"],"value":["undefined"]},"datasource":{"type":"loki","uid":"P8E80F9AEF21F6940"},"definition":"label_values(container_network_receive_bytes_total{namespace=~\"$namespace\"},pod)","hide":0,"includeAll":true,"multi":true,"name":"pod","options":[],"query":{"label":"pod","refId":"LokiVariableQueryEditor-VariableQuery","stream":"","type":1},"refresh":1,"regex":"","skipUrlSync":false,"sort":0,"tagValuesQuery":"","tagsQuery":"","type":"query","useTags":false},{"current":{"selected":true,"text":"level=warn","value":"level=warn"},"hide":0,"name":"search","options":[{"selected":true,"text":"level=warn","value":"level=warn"}],"query":"level=warn","skipUrlSync":false,"type":"textbox"}]},"time":{"from":"now-30m","to":"now"},"timepicker":{"refresh_intervals":["5s","10s","30s","1m","5m","15m","30m","1h","2h","1d"]},"timezone":"","title":"Logs","uid":"liz0yRCZz","version":2,"weekStart":""}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana
  labels:
    app.kubernetes.io/name: grafana
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: grafana
  name: grafana
spec:
  replicas: 0
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
    spec:
      securityContext:
        fsGroup: 472
        supplementalGroups:
          - 0
      containers:
        - name: grafana
          image: grafana/grafana:10.4.4
          imagePullPolicy: IfNotPresent
          env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: grafana-credentials
                  key: username
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-credentials
                  key: password
          ports:
            - containerPort: 3000
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /robots.txt
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 3000
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 250m
              memory: 750Mi
          volumeMounts:
            # Runtime storage / config
            - name: grafana
              mountPath: /var/lib/grafana
            # Base configuration
            - name: config
              mountPath: "/etc/grafana/grafana.ini"
              subPath: grafana.ini
            # Config provisioners (datasources, dashboards, etc.)
            - name: config
              mountPath: "/etc/grafana/provisioning/datasources/datasources.yaml"
              subPath: datasources.yaml
            - name: config
              mountPath: "/etc/grafana/provisioning/dashboards/dashboardproviders.yaml"
              subPath: dashboardproviders.yaml
            # Dashboards-as-code
            - name: dashboards-default
              mountPath: "/var/lib/grafana/dashboards/default/logs.json"
              subPath: "logs.json"
      volumes:
        - name: config
          configMap:
            name: grafana
        - name: dashboards-default
          configMap:
            name: grafana-dashboards-default
        - name: grafana
          persistentVolumeClaim:
            claimName: grafana
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  labels:
    app.kubernetes.io/name: grafana
spec:
  type: ClusterIP
  ports:
    - port: 3000
      protocol: TCP
      targetPort: http
  selector:
    app.kubernetes.io/name: grafana
